# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015 Peter Baumann /
# rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.
# ---------------------------------------------------------------------
# settings.properties
#
# PetaScope configuration file
#
# Important note:
# Parameters marked "yes" in item "need to adapt" MUST be configured
# to meaningful values during installation, they CAN NOT be used as is!
# ---------------------------------------------------------------------

# parameter:     metadata_driver
# purpose:       name of DBMS driver to be loaded
# need to adapt: no
metadata_driver=org.postgresql.Driver

# parameter:     metadata_url
# purpose:       JDBC URL of database serving PetaScope metadata
#                recommendation: use default values on a default Postgresql
#                installation, and DB name petascopedb
# need to adapt: yes
metadata_url=jdbc:postgresql://localhost:5432/petascopedb
# parameter:     metadata_user
# purpose:       DBMS login under which servlet has r/w access
#                to PetaScope metadata;
#                recommendation: establish a dedicated user
# need to adapt: yes
metadata_user=rasdaman

# parameter:     metadata_pass
# purpose:       password for DBMS login, as above
# need to adapt: yes
metadata_pass=rasdaman

# parameter:     rasdaman_url
# purpose:       URL of rasdaman database serving PetaScope raster data
# need to adapt: yes
rasdaman_url=http://localhost:7001

# parameter:     rasdaman_database
# purpose:       name of rasdaman database serving PetaScope raster data
#                recommendation: use rasdaman standard name, RASBASE
# need to adapt: no
rasdaman_database=RASBASE

# parameter:     rasdaman_user
# purpose:       username to access rasdaman
# need to adapt: yes
rasdaman_user=rasguest

# parameter:     rasdaman_pass
# purpose:       password to access rasdaman
# need to adapt: yes
rasdaman_pass=rasguest

# parameter:     rasdaman_admin_user
# purpose:       admin username to access rasdaman
# need to adapt: yes
rasdaman_admin_user=rasadmin

# parameter:     rasdaman_rasadmin_pass
# purpose:       admin password to access rasdaman
# need to adapt: yes
rasdaman_admin_pass=rasadmin

# parameter:     rasdaman_retry_attempts
# purpose:       maximum re-connect attempts to a rasdaman server in case
#                a connection fails.
# need to adapt: no
rasdaman_retry_attempts=5

# parameter:     rasdaman_retry_timeout
# purpose:       wait time in seconds between re-connect attempts to
#                a rasdaman server
# need to adapt: no
rasdaman_retry_timeout=10

# parameter:     rasdaman_bin_path
# purpose:       path to rasdaman binaries
# need to adapt: no
rasdaman_bin_path=/opt/rasdaman/bin/

# parameter:    xml_validation
# purpose:      If set to `true', input XML requests will be validated against
#               OGC WCS schema definitions.
#               (!) When deploying Petascope it will take around 1-2 mins to
#               load the schemas (!). Set the parameter to `false' if no input
#               validation is required (default).
# need to adapt: yes
xml_validation=false

# parameter:     secore_urls
# purpose:       SECORE URLs to be used by Petascope.
# description:   comma-separated list of SECORE endpoints, relevance order.
# need to adapt: yes
secore_urls=http://localhost:8080/def

# parameter:     secore_versions
# purpose:       versions of SECORE's resolvers
#                (grep "VERSION_M.*=" <rasdaman_src>/applications/secore/secore-core/src/ -r)
# need to adapt: yes
secore_versions=0.1.0

# parameter:     ogc_cite_output_optimization
# purpose:       To pass OGC CITE test, Petascope has to optimize the outputs to
#                bypass some test cases.
# description:   Petascope will trim indentation from WCS GetCoverage,
#                DescribeCoverage, GridEnvelop element will have the axis order
#                accordingly by coverage's CRS (especially: EPSG:4326 whose order is Lat, Long).
#                Only enable this option when executing OGC CITE tests, and set
#                xml_validation to false otherwise some SOAP requests will fail
#                due to the input request not passing the schema validation.
# need to adapt: no
ogc_cite_output_optimization=false

# parameter:     metadata_in_covsummary
# purpose:       OWS metadata in the coverage summaries of the capabilities document
#                can be disabled here (true/false).
# description:   This kind of metadata can be added either manually in ps_extra_metadata table
#                or through rasimport `--metadata' argument.
#                Due to the fast growth in the capabilities document if each coverage
#                includes an ows:Metadata element, here you can tell Petascope to ignore such elements.
# need to adapt: yes
metadata_in_covsummary=false

# parameter:     bbox_in_covsummary
# purpose:       true/false switch for enabling/disabling the insertion of wcs:BoundingBox elements
#                in every wcs:CoverageSummary (capabilities document).
# description:   The WCS capabilities document can be used at different levels, depending on the
#                specific service. This parameter (along with other *_in_covsummary parameters)
#                let you fine-tune the amount of information that Petascope should put inside
#                of every wcs:CoverageSummary element. The more the number of coverages offered by
#                A service, the more painful can the response time get damaged by having
#                this param set to true (an RasQL sdom request is called).
# need to adapt: yes
bbox_in_covsummary=false

# parameter:     description_in_covsummary
# purpose:       true/false switch for enabling/disabling the insertion of (optionally inserted)
#                [ows] Title/Abstract/Keywords in wcs:CoverageSummary elements of the capabilities document.
# description:   As for other *_in_covsummary parameters, this one lets you fine-tune
#                the coverage summaries in the capabilities document.
#                Though they can be useful for having a richer catalog of coverages directly from WCS,
#                you can always turn off the insertion of already inserted descriptions
#                (petascopedb::ps_descriptions) by setting this to false.
# need to adapt: yes
description_in_covsummary=false

# parameter:     petascope_servlet_url
# purpose:       service endpoint can be set here.
# description:   This property is used by WCS GetCapabilities() response <ows:HTTP> element
#                to give the service endpoint.
#                Leave it null in case you want Petascope to declare the service URL based on
#                the first request it receives after deploy.
#                Set this parameter to your public service URL in case you are using a proxy.
# need to adapt: no
petascope_servlet_url=

# parameter:     jetty_port
# purpose:       Port of embedded petacope, default is 8080
# description:   This port must not be used simultaneously by any other Web Application like Tomcat or Apache.
# need to adapt: no
jetty_port=8080

# parameter:     jetty_extracted_path
# purpose:       Temporary directory of embedded petascope
# description:   Jetty will extract war files to this directory before starting up petascope.
#                Default is $RMANHOME/share/rasdaman/war/jetty_tmp.
# need to adapt: no
jetty_extracted_path=/opt/rasdaman/share/rasdaman/war

# parameter:     java_server
# purpose:       Allow user to start Petascope with embedded (Jetty) or external (Tomcat) mode.
#                (use ./configure --with-java-server=embedded/external).
# description:   When set to external, all settings (jetty_port, jetty_extracted_path, start_embedded_petascope)
#                for embedded petascope will be disabled.
# need to adapt: no
java_server=external

# parameter:     start_emdedded_petascope
# purpose:       Allow user to start embedded petascope after executing start_rasdaman.sh.
# description:   User could enable or disable embedded petascope by configuration:"true/false"
#                or temporarily enable/disable before starting script start_rasdaman.sh,
#                e.g: start_rasdaman.sh --stop-embedded-petascope" or "start_rasdaman --start-embedded-petascope"
# need to adapt:  no
start_embedded_petascope=false

# parameter:     petascope_admin_user
# purpose:       Login account has r/w access to petascope's service introduction information in metadata tables
#                of database (currently: PostgreSQL), including:
#                ps_description, ps_service_identification, ps_service_provider.
# description:   Log in to http://localhost:8080/rasadaman/admin to update these information with user's information.
#                Recommendation: establish a dedicated user
# need to adapt: yes
petascope_admin_user=rasdaman

# parameter:     petascope_admin_pass
# purpose:       password for petascope_admin_user login, as above.
# need to adapt: yes
petascope_admin_pass=5658b94bdc3f46f484c757ebe32b2d20

# parameter:     disable_write_operations
# purpose:       disables access to WCST (InsertCoverage, UpdateCoverage and DeleteCoverage) operations.
# need to adapt: no
disable_write_operations=true

# parameter:    upload directory for RasqlServlet
# purpose:      Rasql query to RasqlServlet can upload file with decode() functions, default is /tmp/rasql_servlet_upload.
# need to adapt: no
rasql_servlet_upload_path=/tmp/rasql_servlet_upload

# ---------------------------------------------------------------------

#
# log4j configuration
#
log4j.rootLogger=TRACE, rollingFile, stdout

# Reduce the log information from GRPC, Netty
log4j.logger.io.grpc=WARN

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%6p [%d{HH:mm:ss}] %c{1}@%L: %m%n

log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender

# Please make sure the path specified by log4j.appender.rollingFile.File is a
# location where the system user running Tomcat has write access.
# Otherwise, the secore and petascope logs can only be found in catalina.out
log4j.appender.rollingFile.File=/opt/rasdaman/log/petascope.log

log4j.appender.rollingFile.MaxFileSize=10MB
log4j.appender.rollingFile.MaxBackupIndex=10
log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.rollingFile.layout.ConversionPattern=%6p [%d{HH:mm:ss}] %c{1}@%L: %m%n

